import 'dotenv/config';
import fs from 'fs';
import esbuild from 'esbuild';
import builtins from 'builtin-modules';
import { sassPlugin } from 'esbuild-sass-plugin';

const banner =
`/*
- THIS IS A GENERATED/BUNDLED FILE BY ESBUILD -
Please visit the repository linked to view the source code:
https://github.com/noatpad/obsidian-banners
*/`;

const prod = process.argv[2] === 'prod';
const outdir = prod ? 'dist/' : process.env.DEVDIR;

const renameStyleFile = () => fs.renameSync(`${outdir}/main.css`, `${outdir}/styles.css`);

esbuild.build({
  banner: { js: banner },
  entryPoints: ['src/main.ts'],
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
    ...builtins
  ],
  format: 'cjs',
  target: 'es2020',
  treeShaking: true,
  watch: !prod && {
		onRebuild(error) {
			if (error) { return }
			renameStyleFile();
		}
	},
  minify: prod,
  sourcemap: prod ? false : 'inline',
  outdir,
  logLevel: 'info',
	color: true,
	plugins: [sassPlugin()]
})
	.then(renameStyleFile)
	.catch((e) => console.error(e));
